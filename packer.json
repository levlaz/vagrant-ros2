{
  "builders": [
    {
      "type": "vmware-vmx",
      "source_path": "{{ user `source_vmx` }}",
      "vmx_data": {
        "memsize": "8192",
        "numvcpus": "4",
        "guestos": "ubuntu-64",
        "virtualhw.version": "19",
        "architecture": "arm64"
      },
      "vmx_data_post": {
        "memsize": "8192",
        "numvcpus": "4",
        "architecture": "arm64"
      },
      "ssh_username": "vagrant",
      "ssh_password": "vagrant",
      "ssh_timeout": "20m",
      "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now",
      "headless": false
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "#!/bin/bash",
        "set -e",
        "",
        "# Update system",
        "sudo apt-get update",
        "sudo apt-get upgrade -y",
        "",
        "# Install essential packages",
        "sudo apt-get install -y curl wget git vim build-essential software-properties-common",
        "",
        "# Set locale for UTF-8 support",
        "sudo apt-get install -y locales",
        "sudo locale-gen en_US en_US.UTF-8",
        "sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8",
        "export LANG=en_US.UTF-8",
        "",
        "# Enable required repositories",
        "sudo add-apt-repository universe",
        "",
        "# Install ROS 2 apt source",
        "export ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -F \"tag_name\" | awk -F\\\" '{print $4}')",
        "curl -L -o /tmp/ros2-apt-source.deb \"https://github.com/ros-infrastructure/ros-apt-source/releases/download/${ROS_APT_SOURCE_VERSION}/ros2-apt-source_${ROS_APT_SOURCE_VERSION}.$(. /etc/os-release && echo ${UBUNTU_CODENAME:-${VERSION_CODENAME}})_all.deb\"",
        "sudo dpkg -i /tmp/ros2-apt-source.deb",
        "",
        "# Update package lists",
        "sudo apt-get update",
        "",
        "# Install development tools",
        "sudo apt-get install -y ros-dev-tools",
        "",
        "# Install ROS 2 Jazzy Desktop (includes RViz, demos, tutorials)",
        "sudo apt-get install -y ros-jazzy-desktop",
        "",
        "# Install Foxglove ROS bridge",
        "sudo apt-get install -y ros-jazzy-foxglove-bridge",
        "",
        "# Install additional ROS 2 tools",
        "sudo apt-get install -y python3-pip",
        "sudo pip3 install -U colcon-common-extensions",
        "",
        "# Initialize rosdep",
        "sudo rosdep init",
        "rosdep update",
        "",
        "# Set up environment for vagrant user",
        "echo 'source /opt/ros/jazzy/setup.bash' >> /home/vagrant/.bashrc",
        "echo 'source /opt/ros/jazzy/setup.bash' >> /root/.bashrc",
        "",
        "# Create systemd service for Foxglove bridge auto-launch",
        "sudo tee /etc/systemd/system/foxglove-bridge.service > /dev/null <<EOF",
        "[Unit]",
        "Description=Foxglove ROS Bridge",
        "After=network.target",
        "",
        "[Service]",
        "Type=simple",
        "User=vagrant",
        "Environment=ROS_DOMAIN_ID=0",
        "ExecStart=/bin/bash -c 'source /opt/ros/jazzy/setup.bash && ros2 launch foxglove_bridge foxglove_bridge_launch.xml'",
        "Restart=always",
        "RestartSec=5",
        "",
        "[Install]",
        "WantedBy=multi-user.target",
        "EOF",
        "",
        "# Enable and start Foxglove bridge service",
        "sudo systemctl daemon-reload",
        "sudo systemctl enable foxglove-bridge.service",
        "",
        "# Create workspace directory",
        "mkdir -p /home/vagrant/ros2_ws/src",
        "chown -R vagrant:vagrant /home/vagrant/ros2_ws",
        "",
        "# Install additional development tools",
        "sudo apt-get install -y gdb valgrind",
        "",
        "# Install additional useful packages",
        "sudo apt-get install -y htop tree tmux",
        "",
        "# Clean up",
        "sudo apt-get autoremove -y",
        "sudo apt-get clean",
        "",
        "echo 'ROS2 Jazzy installation completed!'",
        "echo 'To start using ROS2, run: source /opt/ros/jazzy/setup.bash'"
      ]
    }
  ],
  "variables": {
    "source_vmx": "{{ env `SOURCE_VMX` }}"
  },
  "post-processors": [
    {
      "type": "vagrant",
      "output": "ros2-jazzy-arm64-vmware.box",
      "vagrantfile_template": "Vagrantfile.template"
    }
  ]
}
